/** \file
 *
 * \brief Definition of Bridge::Vulnerability enum and related utilities
 */

#ifndef VULNERABILITY_HH_
#define VULNERABILITY_HH_

#include <array>
#include <iosfwd>

namespace Bridge {

enum class Partnership;

/** \brief Bridge vulnerability status
 */
enum class Vulnerability {
    NEITHER,
    NORTH_SOUTH,
    EAST_WEST,
    BOTH
};

/** \brief Number of different vulnerability statuses
 *
 * \sa Vulnerability
 */
constexpr std::size_t N_VULNERABILITIES = 4;

/** \brief Array containing all vulnerability statuses
 *
 * \sa Vulnerability
 */
constexpr std::array<Vulnerability, N_VULNERABILITIES> VULNERABILITIES {
    Vulnerability::NEITHER,
    Vulnerability::NORTH_SOUTH,
    Vulnerability::EAST_WEST,
    Vulnerability::BOTH,
};

/** \brief Determine if a given partnership is vulnerable
 *
 * \param vulnerability the vulnerabilities of the deal
 * \param partnership the partnership
 *
 * \return true if given partnership is vulnerable, false otherwise
 */
bool isVulnerable(Vulnerability vulnerability, Partnership partnership);

/** \brief Output a Vulnerability to stream
 *
 * \param os the output stream
 * \param vulnerability the vulnerability to output
 *
 * \return parameter \p os
 */
std::ostream& operator<<(std::ostream& os, Vulnerability vulnerability);

}

#endif // VULNERABILITY_HH_
